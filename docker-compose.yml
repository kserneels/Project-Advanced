name: Build and deliver containers

on: push

jobs:
  productservice:
    runs-on: ubuntu-latest
    name: Java 17 build, test, deliver car-service container
    services:
      mongo-cars:
        image: mongo:latest
        ports:
          - 27017:27017
        volumes:
          - mongodb_car_data:/data/db
        healthcheck:
          test: ["CMD", "mongo", "--eval", "db.adminCommand('ping')"]
          interval: 30s
          retries: 3
          start_period: 10s
          timeout: 10s
      mysql-carhire:
        image: mysql:latest
        ports:
          - 3308:3306
        environment:
          MYSQL_ROOT_PASSWORD: abc123
          MYSQL_DATABASE: carhire_db
          MYSQL_USER: user
          MYSQL_PASSWORD: password
        healthcheck:
          test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
          retries: 5
          interval: 30s
          start_period: 60s
          timeout: 5s

    steps:
      - name: Check out repository
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: 17
          cache: maven
          distribution: adopt

      - name: Build, test and package project
        working-directory: ./car-service
        run: mvn package -B

      - name: Docker login
        run: docker login -u ${{ secrets.DOCKER_USER }} -p ${{ secrets.DOCKER_PASSWORD }}

      - name: Docker Build
        run: docker build -t ${{ secrets.DOCKER_USER }}/car-service:latest ./car-service

      - name: Upload container to Docker Hub with Push
        run: docker push ${{ secrets.DOCKER_USER }}/car-service:latest

  inventoryservice:
    runs-on: ubuntu-latest
    name: Java 17 build, test, deliver customer-service container
    services:
      mysql-customer:
        image: mysql:latest
        ports:
          - 3307:3306
        environment:
          MYSQL_ROOT_PASSWORD: abc123
          MYSQL_DATABASE: customer_db
          MYSQL_USER: user
          MYSQL_PASSWORD: password
        healthcheck:
          test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
          retries: 5
          interval: 30s
          start_period: 60s
          timeout: 5s

    steps:
      - name: Check out repository
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: 17
          cache: maven
          distribution: adopt

      - name: Build, test and package project
        working-directory: ./customer-service
        run: mvn package -B

      - name: Docker login
        run: docker login -u ${{ secrets.DOCKER_USER }} -p ${{ secrets.DOCKER_PASSWORD }}

      - name: Docker Build
        run: docker build -t ${{ secrets.DOCKER_USER }}/customer-service:latest ./customer-service

      - name: Upload container to Docker Hub with Push
        run: docker push ${{ secrets.DOCKER_USER }}/customer-service:latest

  orderservice:
    runs-on: ubuntu-latest
    name: Java 17 build, test, deliver carhire-service container
    services:
      mysql-carhire:
        image: mysql:latest
        ports:
          - 3308:3306
        environment:
          MYSQL_ROOT_PASSWORD: abc123
          MYSQL_DATABASE: carhire_db
          MYSQL_USER: user
          MYSQL_PASSWORD: password
        healthcheck:
          test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
          retries: 5
          interval: 30s
          start_period: 60s
          timeout: 5s

    steps:
      - name: Check out repository
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: 17
          cache: maven
          distribution: adopt

      - name: Build, test and package project
        working-directory: ./carhire-service
        run: mvn package -B

      - name: Docker login
        run: docker login -u ${{ secrets.DOCKER_USER }} -p ${{ secrets.DOCKER_PASSWORD }}

      - name: Docker Build
        run: docker build -t ${{ secrets.DOCKER_USER }}/carhire-service:latest ./carhire-service

      - name: Upload container to Docker Hub with Push
        run: docker push ${{ secrets.DOCKER_USER }}/carhire-service:latest

volumes:
  mongodb_car_data:
  mysql_customer_data:
  mysql_carhire_data:
