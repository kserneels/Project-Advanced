name: Build and deliver containers

on: push

jobs:
  # Car Service Job
  carservice:
    runs-on: ubuntu-latest
    name: Java 17 build, test, deliver car-service container
    steps:
      - name: Check out repository
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: 17
          cache: maven
          distribution: adopt

      - name: Build, test and package project
        working-directory: ./car-service
        run: mvn package -B

      - name: Docker login
        run: docker login -u ${{ secrets.DOCKER_USER }} -p ${{ secrets.DOCKER_PASSWORD }}

      - name: Docker Build
        run: docker build -t ${{ secrets.DOCKER_USER }}/car-service:latest ./car-service

      - name: Upload container to Docker Hub with Push
        run: docker push ${{ secrets.DOCKER_USER }}/car-service:latest

  # Customer Service Job
  customerservice:
    runs-on: ubuntu-latest
    name: Java 17 build, test, deliver customer-service container
    steps:
      - name: Check out repository
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: 17
          cache: maven
          distribution: adopt

      - name: Build, test and package project
        working-directory: ./customer-service
        run: mvn package -B

      - name: Docker login
        run: docker login -u ${{ secrets.DOCKER_USER }} -p ${{ secrets.DOCKER_PASSWORD }}

      - name: Docker Build
        run: docker build -t ${{ secrets.DOCKER_USER }}/customer-service:latest ./customer-service

      - name: Upload container to Docker Hub with Push
        run: docker push ${{ secrets.DOCKER_USER }}/customer-service:latest

  # Car Hire Service Job
  carhireservice:
    runs-on: ubuntu-latest
    name: Java 17 build, test, deliver carhire-service container
    steps:
      - name: Check out repository
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: 17
          cache: maven
          distribution: adopt

      - name: Build, test and package project
        working-directory: ./carhire-service
        run: mvn package -B

      - name: Docker login
        run: docker login -u ${{ secrets.DOCKER_USER }} -p ${{ secrets.DOCKER_PASSWORD }}

      - name: Docker Build
        run: docker build -t ${{ secrets.DOCKER_USER }}/carhire-service:latest ./carhire-service

      - name: Upload container to Docker Hub with Push
        run: docker push ${{ secrets.DOCKER_USER }}/carhire-service:latest

  # Keycloak Job (with realm import)
  keycloak:
    runs-on: ubuntu-latest
    name: Build, test, deliver keycloak container
    steps:
      - name: Check out repository
        uses: actions/checkout@v3

      - name: Docker login
        run: docker login -u ${{ secrets.DOCKER_USER }} -p ${{ secrets.DOCKER_PASSWORD }}

      - name: Merge Keycloak Realm JSON files (if split into multiple secrets)
        run: |
          mkdir -p $HOME/secrets
          echo "${{ secrets.REALM_PART_1 }}" > $HOME/secrets/REALM_PART_1.json
          echo "${{ secrets.REALM_PART_2 }}" > $HOME/secrets/REALM_PART_2.json
          echo "${{ secrets.REALM_PART_3 }}" > $HOME/secrets/REALM_PART_3.json
          echo "${{ secrets.REALM_PART_4 }}" > $HOME/secrets/REALM_PART_4.json
          cat $HOME/secrets/REALM_PART_* > $HOME/secrets/realm-export.json

      - name: Docker Build
        run: docker build -t ${{ secrets.DOCKER_USER }}/keycloak:latest ./keycloak

      - name: Upload container to Docker Hub with Push
        run: docker push ${{ secrets.DOCKER_USER }}/keycloak:latest

      - name: Run Keycloak Container with Custom Settings
        run: |
          docker run -d -p 8085:8085 \
            -e KC_BOOTSTRAP_ADMIN_USERNAME=admin \
            -e KC_BOOTSTRAP_ADMIN_PASSWORD=admin \
            -e KC_HTTP_PORT=8085 \
            -v $HOME/secrets/realm-export.json:/opt/keycloak/data/import/realm-export.json \
            ${{ secrets.DOCKER_USER }}/keycloak:latest

  # API Gateway Job
  apigateway:
    runs-on: ubuntu-latest
    name: Java 17 build, test, deliver api-gateway container
    steps:
      - name: Check out repository
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: 17
          cache: maven
          distribution: adopt

      - name: Build, test and package project
        working-directory: ./api-gateway
        run: mvn package -B -DskipTests

      - name: Docker login
        run: docker login -u ${{ secrets.DOCKER_USER }} -p ${{ secrets.DOCKER_PASSWORD }}

      - name: Docker Build
        run: docker build -t ${{ secrets.DOCKER_USER }}/api-gateway:latest ./api-gateway

      - name: Upload container to Docker Hub with Push
        run: docker push ${{ secrets.DOCKER_USER }}/api-gateway:latest
